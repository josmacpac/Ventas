
<div class="container">
    <div class="row justify-content-md-center">

        <p class="h2">Agregar cliente</p>

<form id="formulario" class="needs-validation" novalidate>
  <div class="form-row">
    <div class="col-md-4 mb-3">
      <label for="validationCustom01">First name</label>
      <input type="text" class="form-control" id="inputName" placeholder="First name"  name="nombre" value="" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    <div class="col-md-4 mb-3">
      <label for="validationCustom02">Last name</label>
      <input type="text" class="form-control" id="inputLastName" placeholder="Last name" value="" name="apellido" required>
      <div class="valid-feedback">
        Looks good!
      </div>
    </div>
    
  </div>
  <div class="form-row">
    <div class="col-md-6 mb-3">
      <label for="validationCustom03">Address</label>
      <input type="text" class="form-control" id="inputAddress" placeholder="Address" name="domicilio"  required>
      <div class="invalid-feedback">
        Please provide a valid Address.
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <label for="validationCustom04">Email</label>
      <input type="text" class="form-control" id="inputEmail" placeholder="Email" name="email" required>
      <div class="invalid-feedback">
        Please provide a valid Email.
      </div>
    </div>
    <div class="col-md-3 mb-3">
      <label for="validationCustom05">Phone</label>
      <input type="text" class="form-control" id="inputPhone" placeholder="Phone" name="telefono" required>
      <div class="invalid-feedback">
        Please provide a valid Phone number.
      </div>
    </div>
  </div>
  <div class="form-group">
    <div class="form-check">
      <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
      <label class="form-check-label" for="invalidCheck">
        Agree to terms and conditions
      </label>
      <div class="invalid-feedback">
        You must agree before submitting.
      </div>
    </div>
  </div>
  <button id="btnSubmit" class="btn btn-primary" type="submit">Submit form</button>
</form>


    </div>
</div>

<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script>

<script>

btnSubmit = document.getElementById("btnSubmit"),
formulario = document.getElementById('formulario');


const enviarFormulario = function(e){
    e.preventDefault();
console.log("iniciando")
const formdata = new FormData(formulario);
const datosCompletos =  Object.fromEntries(formdata.entries());
console.log(datosCompletos) 
console.log(JSON.stringify(datosCompletos))
 
 //Enviar datos a API

async function postData(url= 'http://localhost:3000/clientes/api/nuevocliente', data = datosCompletos){
  const response = await fetch(url, {
    method: 'POST',
    mode: 'cors',
    cache: 'default',
    credentials: 'same-origin',
    headers:{
      'Content-type':'application/json'
    } ,
    redirect: 'follow',
    referrerPolicy: 'no-referrer', 
     body: JSON.stringify(data)

  });
  console.log("Cliente agregado correctamente con el id ...")
  return response.json();
}

postData();

 alert("Cliente agregado correctamente...")
 formulario.reset();

}

btnSubmit.addEventListener("click", enviarFormulario)

</script>